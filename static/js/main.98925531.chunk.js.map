{"version":3,"sources":["constants/todoConstants.js","actions/todoAction.js","components/UpdateForm/UpdateForm.jsx","components/Todos/Todos.jsx","constants/languageConstant.js","actions/languageAction.js","components/Navbar/TodoNav.jsx","components/Toolbar/Toolbar.jsx","App.js","assets/language.js","store.js","reducers/todosReducer.js","reducers/languageReducer.js","index.js"],"names":["ADD_TODO","TOGGLE_COMPLETED","DELETE_TODO","UPDATE_TODO","FILTER_TODOS","SORT_TODOS","filterTodos","filteredTodos","type","payload","updateTodo","id","updatedName","isEditing","sortTodo","todos","UpdateForm","todo","useState","isShow","setFormShow","dispatch","useDispatch","name","setUpdateName","submit","e","length","onClick","stopPropagation","finished","setTimeout","document","getElementById","focus","showForm","Form","inline","className","onSubmit","Control","placeholder","size","value","onChange","target","onBlur","Todos","useSelector","state","language","toggleComplete","checked","isCompleted","removeTodo","deleteTodo","Table","bordered","content","createdDate","status","action","filter","filtered","map","index","Date","createdAt","toLocaleString","OverlayTrigger","placement","overlay","Tooltip","finishedAt","editHistory","his","CHANGE_LANGUAGE","changeLanguage","TodoNav","search","setSearch","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","Dropdown","variant","Menu","Item","FormControl","searchByName","text","temp","trim","toLowerCase","includes","Toolbar","sortType","setSortType","todoName","setTodoName","createTodo","preventDefault","sortBy","JSON","parse","localStorage","getItem","sort","a","b","addToDo","DropdownButton","title","featured","dateNewToOld","dateOldToNew","App","english","simplifiedChinese","spanish","reducers","combineReducers","newTodo","Math","floor","random","getTime","newArr","setItem","stringify","newState","item","updated","currentTodo","unshift","addedState","initObj","store","createStore","i","getInitState","composeWithDevTools","ReactDOM","render"],"mappings":"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","file":"static/js/main.98925531.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_COMPLETED = \"TOGGLE_COMPLETED\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const FILTER_TODOS = \"FILTER_TODOS\";\nexport const SORT_TODOS = \"SORT_TODOS\";\n","import {\n  ADD_TODO,\n  TOGGLE_COMPLETED,\n  DELETE_TODO,\n  UPDATE_TODO,\n  FILTER_TODOS,\n  SORT_TODOS,\n} from \"../constants/todoConstants\";\n\nexport const markAsCompleted = (id, isCompleted) => {\n  return {\n    type: TOGGLE_COMPLETED,\n    payload: { id, isCompleted },\n  };\n};\n\nexport const filterTodos = (filteredTodos) => {\n  return {\n    type: FILTER_TODOS,\n    payload: filteredTodos,\n  };\n};\n\nexport const updateTodo = (id, updatedName, isEditing) => {\n  return {\n    type: UPDATE_TODO,\n    payload: { id, updatedName, isEditing },\n  };\n};\n\nexport const addTodo = (name) => {\n  return {\n    type: ADD_TODO,\n    payload: { name },\n  };\n};\n\nexport const sortTodo = (todos) => {\n  return {\n    type: SORT_TODOS,\n    payload: { todos },\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: { id },\n  };\n};\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTodo } from \"../../actions/todoAction\";\n\nconst UpdateForm = ({ todo }) => {\n  const [isShow, setFormShow] = useState(false);\n  const dispatch = useDispatch();\n\n  const [updatedName, setUpdateName] = useState(todo.name);\n  const showForm = (e) => {\n    e.stopPropagation();\n    if (!todo.finished) {\n      setFormShow(true);\n      setTimeout(() => {\n        const input = document.getElementById(todo.id);\n        input.focus();\n        dispatch(updateTodo(todo.id, todo.name, true));\n      });\n    }\n  };\n  const onChange = (e) => {\n    setUpdateName(e.target.value);\n  };\n\n  const submit = (e) => {\n    if (updatedName.length > 0) {\n      dispatch(updateTodo(todo.id, updatedName, false));\n    }\n    setFormShow(false);\n  };\n  return (\n    <>\n      {!isShow && <span onClick={(e) => showForm(e)}>{todo.name}</span>}\n      {isShow && (\n        <span>\n          <Form inline className=\"ml-auto\" onSubmit={(e) => submit(e)}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Update Name\"\n              size=\"sm\"\n              id={todo.id}\n              className=\"mr-sm-2 shadow-none\"\n              value={updatedName}\n              onChange={(e) => onChange(e)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n              onBlur={(e) => {\n                submit(e);\n              }}\n            />\n          </Form>\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default UpdateForm;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Table, OverlayTrigger, Tooltip, ListGroup } from \"react-bootstrap\";\nimport { markAsCompleted, deleteTodo } from \"../../actions/todoAction\";\nimport \"./Todos.scss\";\nimport UpdateForm from \"../UpdateForm/UpdateForm\";\n\nconst Todos = () => {\n  const { todos, language } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const toggleComplete = (e, todo) => {\n    const checked = todo.finished;\n    if (!todo.isEditing) {\n      dispatch(markAsCompleted(todo.id, !checked));\n    }\n  };\n\n  const removeTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  const renderTodo = () => {\n    const filtered = todos.filter((todo) => !todo.filtered);\n    return filtered.map((todo, index) => {\n      return (\n        <tr\n          key={todo.id}\n          onClick={(e) => toggleComplete(e, todo)}\n          className={`todo-row ${todo.finished ? \"strikeout\" : \"\"}`}\n        >\n          <td>{index + 1}</td>\n          <td>\n            <UpdateForm todo={todo} />\n          </td>\n          <td>{new Date(todo.createdAt).toLocaleString()}</td>\n          <td>\n            {todo.finished ? (\n              <OverlayTrigger\n                placement={\"top\"}\n                overlay={\n                  <Tooltip>\n                    {language.finishedAt}{\" \"}\n                    {new Date(todo.finishedAt).toLocaleString()}\n                  </Tooltip>\n                }\n              >\n                <i\n                  className=\"far fa-check-circle\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                ></i>\n              </OverlayTrigger>\n            ) : (\n              <OverlayTrigger\n                placement={\"bottom\"}\n                overlay={\n                  <Tooltip>\n                    <div className=\"d-flex flex-column justify-content-center\">\n                      {language.editHistory}:\n                      {todo.editHistory && todo.editHistory.length > 0\n                        ? todo.editHistory.map((his) => {\n                            return (\n                              <span key={his}>\n                                {new Date(his).toLocaleString()}\n                              </span>\n                            );\n                          })\n                        : \"None\"}\n                    </div>\n                  </Tooltip>\n                }\n              >\n                <i\n                  className=\"far fa-times-circle\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                ></i>\n              </OverlayTrigger>\n            )}\n          </td>\n          <td>\n            <i\n              className=\"fas fa-trash\"\n              onClick={(e) => {\n                e.stopPropagation();\n                removeTodo(todo.id);\n              }}\n            ></i>\n          </td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <div>\n      {todos.length > 0 && (\n        <Table bordered size=\"md\">\n          <thead>\n            <tr>\n              <th className=\"status-col\">#</th>\n              <th className=\"name-col\">{language.content}</th>\n              <th>{language.createdDate}</th>\n              <th className=\"status-col\">{language.status}</th>\n              <th>{language.action}</th>\n            </tr>\n          </thead>\n          <tbody>{renderTodo()}</tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default Todos;\n","export const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\n","import { CHANGE_LANGUAGE } from \"../constants/languageConstant\";\n\nexport const changeLanguage = (language) => {\n  return {\n    type: CHANGE_LANGUAGE,\n    payload: language,\n  };\n};\n","import React, { useState } from \"react\";\nimport {\n  Navbar,\n  Form,\n  FormControl,\n  Container,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterTodos } from \"../../actions/todoAction\";\nimport { changeLanguage } from \"../../actions/languageAction\";\nimport { IoLanguage } from \"react-icons/io5\";\nconst TodoNav = () => {\n  const { todos, language } = useSelector((state) => state);\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    const text = e.target.value;\n    const temp = [...todos];\n\n    setSearch(text);\n    const val = text.trim();\n    if (val.length === 0) {\n      temp.map((todo) => {\n        todo.filtered = false;\n      });\n      dispatch(filterTodos(temp));\n    } else {\n      temp.map((todo) => {\n        const name = todo.name.toLowerCase();\n        todo.filtered = !name.includes(text);\n      });\n      dispatch(filterTodos(temp));\n    }\n  };\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>TODO</Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            {todos.length > 0 && (\n              <Form inline className=\"ml-auto\">\n                <Dropdown className=\"mr-2\">\n                  <Dropdown.Toggle\n                    id=\"dropdown-basic\"\n                    size=\"sm\"\n                    variant=\"light\"\n                  >\n                    <IoLanguage /> {language.language}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={() => {\n                        dispatch(changeLanguage(\"english\"));\n                      }}\n                    >\n                      English\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() => {\n                        dispatch(changeLanguage(\"simplifiedChinese\"));\n                      }}\n                    >\n                      简体中文\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={() => {\n                        dispatch(changeLanguage(\"spanish\"));\n                      }}\n                    >\n                      Español\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <FormControl\n                  type=\"text\"\n                  placeholder={language.searchByName}\n                  className=\"mr-sm-2\"\n                  value={search}\n                  onChange={(e) => onChange(e)}\n                />\n              </Form>\n            )}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default TodoNav;\n","import React, { useState } from \"react\";\nimport { Form, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, sortTodo } from \"../../actions/todoAction\";\n\nconst Toolbar = () => {\n  const { todos, language } = useSelector((state) => state);\n  const [sortType, setSortType] = useState(\"featured\");\n  const [todoName, setTodoName] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const createTodo = (e) => {\n    e.preventDefault();\n    if (todoName.length > 0) {\n      dispatch(addTodo(todoName));\n      setTodoName(\"\");\n    }\n  };\n\n  const sortBy = (type) => {\n    setSortType(type);\n    const state = JSON.parse(localStorage.getItem(\"todosInStorage\"));\n    const { todos } = state;\n    if (type === \"featured\") {\n      dispatch(sortTodo(todos));\n    }\n    if (type.includes(\"date\")) {\n      todos.sort((a, b) => {\n        const sortType =\n          type === \"dateOldToNew\"\n            ? a.createdAt - b.createdAt\n            : b.createdAt - a.createdAt;\n        return sortType;\n      });\n      dispatch(sortTodo(todos));\n    }\n    if (type === \"status\") {\n      todos.sort((a, b) => {\n        if (a.finished < b.finished) {\n          return -1;\n        }\n        if (a.finished > b.finished) {\n          return 1;\n        }\n        return 0;\n      });\n      dispatch(sortTodo(todos));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-2\">\n        <Form\n          inline\n          size=\"sm\"\n          onSubmit={(e) => {\n            createTodo(e);\n          }}\n        >\n          <Form.Control\n            type=\"text\"\n            placeholder={language.addToDo}\n            size=\"sm\"\n            className=\"mr-sm-2 shadow-none\"\n            value={todoName}\n            onChange={(e) => {\n              setTodoName(e.target.value);\n            }}\n            onBlur={(e) => {\n              createTodo(e);\n            }}\n          />\n        </Form>\n        {todos.length > 0 && (\n          <DropdownButton\n            title={`${language.sortBy}: ${language[sortType]}`}\n            size=\"sm\"\n            variant=\"secondary\"\n          >\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"featured\");\n              }}\n            >\n              {language.featured}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"dateNewToOld\");\n              }}\n            >\n              {language.dateNewToOld}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"dateOldToNew\");\n              }}\n            >\n              {language.dateOldToNew}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"status\");\n              }}\n            >\n              {language.status}\n            </Dropdown.Item>\n          </DropdownButton>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Toolbar;\n","import \"./App.scss\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport Todos from \"./components/Todos/Todos\";\nimport TodoNav from \"./components/Navbar/TodoNav\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoNav />\n      <Container className=\"mt-5\">\n        <Toolbar />\n        <Todos />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","export const english = {\n  language: \"Language\",\n  searchByName: \"Search By Content\",\n  addToDo: \"Add Todo\",\n  content: \"Content\",\n  createdDate: \"Created Date\",\n  status: \"Status\",\n  action: \"Action\",\n  sortBy: \"Sort By\",\n  featured: \"Featured\",\n  dateNewToOld: \"Date(New To Old)\",\n  dateOldToNew: \"Date(Old To New)\",\n  editHistory: \"Edit History\",\n  finishedAt: \"Finished At\",\n};\n\nexport const simplifiedChinese = {\n  language: \"语言\",\n  searchByName: \"按照内容搜索\",\n  addToDo: \"添加新事项\",\n  content: \"内容\",\n  createdDate: \"添加日期\",\n  status: \"按照状态\",\n  action: \"操作\",\n  sortBy: \"排序\",\n  featured: \"默认\",\n  dateNewToOld: \"按照日期从新到旧\",\n  dateOldToNew: \"按照日期从旧到新\",\n  editHistory: \"修改历史\",\n  finishedAt: \"完成于\",\n};\n\nexport const spanish = {\n  language: \"Idiomas\",\n  searchByName: \"Buscar Por Contenido\",\n  addToDo: \"Agregar Contenido\",\n  content: \"Contenido\",\n  createdDate: \"Fecha De Creación\",\n  status: \"Estado\",\n  action: \"Acción\",\n  sortBy: \"Ordenar Por\",\n  featured: \"Destacadas\",\n  dateNewToOld: \"Fecha De Nuevo A Viejo\",\n  dateOldToNew: \"Fecha De Viejo A Nuevo\",\n  editHistory: \"Editar Historial\",\n  finishedAt: \"Terminado En\",\n};\n","import { createStore, combineReducers } from \"redux\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { todosReducer } from \"./reducers/todosReducer\";\nimport { languageReducer } from \"./reducers/languageReducer\";\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n  language: languageReducer,\n});\n\nconst initObj = {\n  todos: [\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Study new things\",\n      createdAt: 1606934271000,\n      finished: false,\n      filtered: false,\n      isEditing: false,\n    },\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Cleaning bed room\",\n      createdAt: 1601746671000,\n      finished: true,\n      filtered: false,\n      isEditing: false,\n      finishedAt: 1601846671000,\n    },\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Go to Costco\",\n      createdAt: 1604428671000,\n      finished: false,\n      filtered: false,\n      isEditing: false,\n    },\n  ],\n};\n\nconst getInitState = () => {\n  const objInStorage = localStorage.getItem(\"todosInStorage\");\n  if (!objInStorage) {\n    localStorage.setItem(\"todosInStorage\", JSON.stringify(initObj));\n    return initObj;\n  }\n  const state = JSON.parse(localStorage.getItem(\"todosInStorage\"));\n  const { todos } = state;\n  for (let i = 0; i < todos.length; i++) {\n    todos[i].filtered = false;\n  }\n  return state;\n};\n\nexport const store = createStore(\n  reducers,\n  getInitState(),\n  composeWithDevTools()\n);\n","import {\n  ADD_TODO,\n  TOGGLE_COMPLETED,\n  DELETE_TODO,\n  UPDATE_TODO,\n  FILTER_TODOS,\n  SORT_TODOS,\n} from \"../constants/todoConstants\";\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      const newTodo = {\n        id: Math.floor(Math.random() * 100000),\n        name: action.payload.name,\n        createdAt: new Date().getTime(),\n        finished: false,\n        filtered: false,\n        isEditing: false,\n      };\n      const newArr = [...state, newTodo];\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: newArr,\n        })\n      );\n      return newArr;\n    case TOGGLE_COMPLETED:\n      const newState = state.map((item) => {\n        const { id, isCompleted } = action.payload;\n        if (item.id !== id) {\n          return item;\n        }\n        return {\n          ...item,\n          id,\n          finished: isCompleted,\n          finishedAt: isCompleted ? new Date().getTime() : null,\n        };\n      });\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: newState,\n        })\n      );\n      return newState;\n    case FILTER_TODOS:\n      return action.payload;\n    case UPDATE_TODO:\n      const updated = state.map((item) => {\n        const { id, updatedName, isEditing } = action.payload;\n        if (item.id !== id) {\n          return item;\n        }\n        const currentTodo = { ...item, isEditing };\n        if (!isEditing && currentTodo.name !== updatedName) {\n          const { editHistory } = currentTodo;\n          if (!editHistory) {\n            currentTodo[\"editHistory\"] = [new Date().getTime()];\n          } else {\n            currentTodo[\"editHistory\"].unshift(new Date().getTime());\n          }\n          currentTodo.name = updatedName;\n        }\n\n        return currentTodo;\n      });\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: updated,\n        })\n      );\n      return updated;\n    case SORT_TODOS:\n      return action.payload.todos;\n    case DELETE_TODO:\n      const addedState = state.filter((todo) => todo.id !== action.payload.id);\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: addedState,\n        })\n      );\n      return addedState;\n    default:\n      return state;\n  }\n};\n","import { CHANGE_LANGUAGE } from \"../constants/languageConstant\";\n\nimport { english, simplifiedChinese, spanish } from \"../assets/language\";\n\nexport const languageReducer = (state = english, action) => {\n  switch (action.type) {\n    case CHANGE_LANGUAGE:\n      if (action.payload === \"english\") {\n        return english;\n      } else if (action.payload === \"simplifiedChinese\") {\n        return simplifiedChinese;\n      } else if (action.payload === \"spanish\") {\n        return spanish;\n      }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}