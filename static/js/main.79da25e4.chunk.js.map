{"version":3,"sources":["constants/todoConstants.js","actions/todoAction.js","components/UpdateForm/UpdateForm.jsx","components/Todos/Todos.jsx","components/Navbar/TodoNav.jsx","components/Toolbar/Toolbar.jsx","App.js","store.js","reducers/todosReducer.js","index.js"],"names":["ADD_TODO","TOGGLE_COMPLETED","DELETE_TODO","UPDATE_TODO","FILTER_TODOS","SORT_TODOS","filterTodos","filteredTodos","type","payload","updateTodo","id","updatedName","isEditing","sortTodo","todos","UpdateForm","todo","useState","isShow","setFormShow","dispatch","useDispatch","name","setUpdateName","submit","e","length","onClick","stopPropagation","finished","setTimeout","document","getElementById","focus","showForm","Form","inline","className","onSubmit","Control","placeholder","size","value","onChange","target","onBlur","Todos","useSelector","state","toggleComplete","checked","isCompleted","removeTodo","deleteTodo","Table","bordered","filter","filtered","map","index","Date","createdAt","toLocaleString","OverlayTrigger","placement","overlay","Tooltip","finishedAt","editHistory","his","TodoNav","search","setSearch","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","FormControl","text","temp","trim","toLowerCase","includes","Toolbar","sortType","setSortType","todoName","setTodoName","createTodo","preventDefault","sortBy","JSON","parse","localStorage","getItem","sort","a","b","DropdownButton","title","variant","Dropdown","Item","App","Container","reducers","combineReducers","action","newTodo","Math","floor","random","getTime","newArr","setItem","stringify","newState","item","updated","currentTodo","unshift","addedState","initObj","store","createStore","i","getInitState","composeWithDevTools","ReactDOM","render"],"mappings":"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","file":"static/js/main.79da25e4.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_COMPLETED = \"TOGGLE_COMPLETED\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const FILTER_TODOS = \"FILTER_TODOS\";\nexport const SORT_TODOS = \"SORT_TODOS\";\n","import {\n  ADD_TODO,\n  TOGGLE_COMPLETED,\n  DELETE_TODO,\n  UPDATE_TODO,\n  FILTER_TODOS,\n  SORT_TODOS,\n} from \"../constants/todoConstants\";\n\nexport const markAsCompleted = (id, isCompleted) => {\n  return {\n    type: TOGGLE_COMPLETED,\n    payload: { id, isCompleted },\n  };\n};\n\nexport const filterTodos = (filteredTodos) => {\n  return {\n    type: FILTER_TODOS,\n    payload: filteredTodos,\n  };\n};\n\nexport const updateTodo = (id, updatedName, isEditing) => {\n  return {\n    type: UPDATE_TODO,\n    payload: { id, updatedName, isEditing },\n  };\n};\n\nexport const addTodo = (name) => {\n  return {\n    type: ADD_TODO,\n    payload: { name },\n  };\n};\n\nexport const sortTodo = (todos) => {\n  return {\n    type: SORT_TODOS,\n    payload: { todos },\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: { id },\n  };\n};\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTodo } from \"../../actions/todoAction\";\n\nconst UpdateForm = ({ todo }) => {\n  const [isShow, setFormShow] = useState(false);\n  const dispatch = useDispatch();\n\n  const [updatedName, setUpdateName] = useState(todo.name);\n  const showForm = (e) => {\n    e.stopPropagation();\n    if (!todo.finished) {\n      setFormShow(true);\n      setTimeout(() => {\n        const input = document.getElementById(todo.id);\n        input.focus();\n        dispatch(updateTodo(todo.id, todo.name, true));\n      });\n    }\n  };\n  const onChange = (e) => {\n    setUpdateName(e.target.value);\n  };\n\n  const submit = (e) => {\n    if (updatedName.length > 0) {\n      dispatch(updateTodo(todo.id, updatedName, false));\n    }\n    setFormShow(false);\n  };\n  return (\n    <>\n      {!isShow && <span onClick={(e) => showForm(e)}>{todo.name}</span>}\n      {isShow && (\n        <span>\n          <Form inline className=\"ml-auto\" onSubmit={(e) => submit(e)}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Update Name\"\n              size=\"sm\"\n              id={todo.id}\n              className=\"mr-sm-2 shadow-none\"\n              value={updatedName}\n              onChange={(e) => onChange(e)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n              onBlur={(e) => {\n                submit(e);\n              }}\n            />\n          </Form>\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default UpdateForm;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Table, OverlayTrigger, Tooltip, ListGroup } from \"react-bootstrap\";\nimport { markAsCompleted, deleteTodo } from \"../../actions/todoAction\";\nimport \"./Todos.scss\";\nimport UpdateForm from \"../UpdateForm/UpdateForm\";\n\nconst Todos = () => {\n  const { todos } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const toggleComplete = (e, todo) => {\n    const checked = todo.finished;\n    if (!todo.isEditing) {\n      dispatch(markAsCompleted(todo.id, !checked));\n    }\n  };\n\n  const removeTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  const renderTodo = () => {\n    const filtered = todos.filter((todo) => !todo.filtered);\n    return filtered.map((todo, index) => {\n      return (\n        <tr\n          key={todo.id}\n          onClick={(e) => toggleComplete(e, todo)}\n          className={`todo-row ${todo.finished ? \"strikeout\" : \"\"}`}\n        >\n          <td>{index + 1}</td>\n          <td>\n            <UpdateForm todo={todo} />\n          </td>\n          <td>{new Date(todo.createdAt).toLocaleString()}</td>\n          <td>\n            {todo.finished ? (\n              <OverlayTrigger\n                placement={\"top\"}\n                overlay={\n                  <Tooltip>\n                    Finished at {new Date(todo.finishedAt).toLocaleString()}\n                  </Tooltip>\n                }\n              >\n                <i\n                  className=\"far fa-check-circle\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                ></i>\n              </OverlayTrigger>\n            ) : (\n              <OverlayTrigger\n                placement={\"bottom\"}\n                overlay={\n                  <Tooltip>\n                    <div className=\"d-flex flex-column justify-content-center\">\n                      Edit History:\n                      {todo.editHistory && todo.editHistory.length > 0\n                        ? todo.editHistory.map((his) => {\n                            return (\n                              <span key={his}>\n                                {new Date(his).toLocaleString()}\n                              </span>\n                            );\n                          })\n                        : \"None\"}\n                    </div>\n                  </Tooltip>\n                }\n              >\n                <i\n                  className=\"far fa-times-circle\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                ></i>\n              </OverlayTrigger>\n            )}\n          </td>\n          <td>\n            <i\n              className=\"fas fa-trash\"\n              onClick={(e) => {\n                e.stopPropagation();\n                removeTodo(todo.id);\n              }}\n            ></i>\n          </td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <div>\n      {todos.length > 0 && (\n        <Table bordered size=\"md\">\n          <thead>\n            <tr>\n              <th className=\"status-col\">#</th>\n              <th className=\"name-col\">TO DO</th>\n              <th>Created Date</th>\n              <th className=\"status-col\">Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{renderTodo()}</tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default Todos;\n","import React, { useState } from \"react\";\nimport { Navbar, Form, FormControl } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterTodos } from \"../../actions/todoAction\";\n\nconst TodoNav = () => {\n  const { todos } = useSelector((state) => state);\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    const text = e.target.value;\n    const temp = [...todos];\n\n    setSearch(text);\n    const val = text.trim();\n    if (val.length === 0) {\n      temp.map((todo) => {\n        todo.filtered = false;\n      });\n      dispatch(filterTodos(temp));\n    } else {\n      temp.map((todo) => {\n        const name = todo.name.toLowerCase();\n        todo.filtered = !name.includes(text);\n      });\n      dispatch(filterTodos(temp));\n    }\n  };\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>TODO</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          {todos.length > 0 && (\n            <Form inline className=\"ml-auto\">\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search by name\"\n                className=\"mr-sm-2\"\n                value={search}\n                onChange={(e) => onChange(e)}\n              />\n            </Form>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default TodoNav;\n","import React, { useState } from \"react\";\nimport { Form, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, sortTodo } from \"../../actions/todoAction\";\n\nconst Toolbar = () => {\n  const { todos } = useSelector((state) => state);\n  const [sortType, setSortType] = useState(\"Featured\");\n  const [todoName, setTodoName] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const createTodo = (e) => {\n    e.preventDefault();\n    if (todoName.length > 0) {\n      dispatch(addTodo(todoName));\n      setTodoName(\"\");\n    }\n  };\n\n  const sortBy = (type) => {\n    setSortType(type);\n    const state = JSON.parse(localStorage.getItem(\"todosInStorage\"));\n    const { todos } = state;\n    if (type === \"Featured\") {\n      dispatch(sortTodo(todos));\n    }\n    if (type.includes(\"Date\")) {\n      todos.sort((a, b) => {\n        const sortType =\n          type === \"Date(Old To New)\"\n            ? a.createdAt - b.createdAt\n            : b.createdAt - a.createdAt;\n        return sortType;\n      });\n      dispatch(sortTodo(todos));\n    }\n    if (type === \"Status\") {\n      todos.sort((a, b) => {\n        if (a.finished < b.finished) {\n          return -1;\n        }\n        if (a.finished > b.finished) {\n          return 1;\n        }\n        return 0;\n      });\n      dispatch(sortTodo(todos));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-2\">\n        <Form\n          inline\n          size=\"sm\"\n          onSubmit={(e) => {\n            createTodo(e);\n          }}\n        >\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Add Todo\"\n            size=\"sm\"\n            className=\"mr-sm-2 shadow-none\"\n            value={todoName}\n            onChange={(e) => {\n              setTodoName(e.target.value);\n            }}\n            onBlur={(e) => {\n              createTodo(e);\n            }}\n          />\n        </Form>\n        {todos.length > 0 && (\n          <DropdownButton\n            title={`Sort by: ${sortType}`}\n            size=\"sm\"\n            variant=\"secondary\"\n          >\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"Featured\");\n              }}\n            >\n              Featured\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"Date(New To Old)\");\n              }}\n            >\n              Date(New To Old)\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"Date(Old To New)\");\n              }}\n            >\n              Date(Old To New)\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => {\n                sortBy(\"Status\");\n              }}\n            >\n              Status\n            </Dropdown.Item>\n          </DropdownButton>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Toolbar;\n","import \"./App.scss\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport Todos from \"./components/Todos/Todos\";\nimport TodoNav from \"./components/Navbar/TodoNav\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoNav />\n      <Container className=\"mt-5\">\n        <Toolbar />\n        <Todos />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { todosReducer } from \"./reducers/todosReducer\";\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n});\n\nconst initObj = {\n  todos: [\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Study new things\",\n      createdAt: 1606934271000,\n      finished: false,\n      filtered: false,\n      isEditing: false,\n    },\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Cleaning bed room\",\n      createdAt: 1601746671000,\n      finished: true,\n      filtered: false,\n      isEditing: false,\n      finishedAt: 1601846671000,\n    },\n    {\n      id: Math.floor(Math.random() * 100000),\n      name: \"Go to Costco\",\n      createdAt: 1604428671000,\n      finished: false,\n      filtered: false,\n      isEditing: false,\n    },\n  ],\n};\n\nconst getInitState = () => {\n  const objInStorage = localStorage.getItem(\"todosInStorage\");\n  if (!objInStorage) {\n    localStorage.setItem(\"todosInStorage\", JSON.stringify(initObj));\n    return initObj;\n  }\n  const state = JSON.parse(localStorage.getItem(\"todosInStorage\"));\n  const { todos } = state;\n  for (let i = 0; i < todos.length; i++) {\n    todos[i].filtered = false;\n  }\n  return state;\n};\n\nexport const store = createStore(\n  reducers,\n  getInitState(),\n  composeWithDevTools()\n);\n","import {\n  ADD_TODO,\n  TOGGLE_COMPLETED,\n  DELETE_TODO,\n  UPDATE_TODO,\n  FILTER_TODOS,\n  SORT_TODOS,\n} from \"../constants/todoConstants\";\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      const newTodo = {\n        id: Math.floor(Math.random() * 100000),\n        name: action.payload.name,\n        createdAt: new Date().getTime(),\n        finished: false,\n        filtered: false,\n        isEditing: false,\n      };\n      const newArr = [...state, newTodo];\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: newArr,\n        })\n      );\n      return newArr;\n    case TOGGLE_COMPLETED:\n      const newState = state.map((item) => {\n        const { id, isCompleted } = action.payload;\n        if (item.id !== id) {\n          return item;\n        }\n        return {\n          ...item,\n          id,\n          finished: isCompleted,\n          finishedAt: isCompleted ? new Date().getTime() : null,\n        };\n      });\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: newState,\n        })\n      );\n      return newState;\n    case FILTER_TODOS:\n      return action.payload;\n    case UPDATE_TODO:\n      const updated = state.map((item) => {\n        const { id, updatedName, isEditing } = action.payload;\n        if (item.id !== id) {\n          return item;\n        }\n        const currentTodo = { ...item, name: updatedName, isEditing };\n        if (!isEditing) {\n          const { editHistory } = currentTodo;\n          if (!editHistory) {\n            currentTodo[\"editHistory\"] = [new Date().getTime()];\n          } else {\n            currentTodo[\"editHistory\"].unshift(new Date().getTime());\n          }\n        }\n\n        return currentTodo;\n      });\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: updated,\n        })\n      );\n      return updated;\n    case SORT_TODOS:\n      return action.payload.todos;\n    case DELETE_TODO:\n      const addedState = state.filter((todo) => todo.id !== action.payload.id);\n      localStorage.setItem(\n        \"todosInStorage\",\n        JSON.stringify({\n          todos: addedState,\n        })\n      );\n      return addedState;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}